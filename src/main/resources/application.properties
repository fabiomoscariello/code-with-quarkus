# configure your datasource
quarkus.datasource.db-kind = ${POSTGRES_DB}
quarkus.datasource.username = ${POSTGRES_USER}
quarkus.datasource.password = ${POSTGRES_PASSWORD}
quarkus.datasource.jdbc.url = jdbc:postgresql://${POSTGRES_SERVICE_HOST}:${POSTGRES_PORT}/${DB_NAME}

mp.jwt.verify.publickey.location=publicKey.pem 
mp.jwt.verify.issuer=https://example.com/issuer 
quarkus.native.resources.includes=publicKey.pem

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
#packaging docker
quarkus.container-image.build=true
quarkus.container-image.name=quakus-code
quarkus.container-image.group=quarkus-group

#cors
quarkus.http.cors=true
quarkus.http.cors.origins=http://foo.com,http://www.bar.io,/https://([a-z0-9\\-_]+)\\\\.app\\\\.mydomain\\\\.com/
quarkus.http.cors.methods=GET,PUT,POST
quarkus.http.cors.headers=X-Custom
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true

# Configure the Kafka sink (we write to it)
kafka.bootstrap.servers=kafka:9092

mp.messaging.incoming.my-topic-insurance-incoming.connector=smallrye-kafka
mp.messaging.incoming.my-topic-insurance-incoming.topic=my-topic
mp.messaging.incoming.my-topic-insurance-incoming.auto.offset.reset=earliest
mp.messaging.outgoing.my-topic-insurance.connector=smallrye-kafka
mp.messaging.outgoing.my-topic-insurance.topic=my-topic
mp.messaging.outgoing.my-topic-insurance.acks=0



